% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename_ch3_samples.R
\name{rename_ch3_samples}
\alias{rename_ch3_samples}
\title{Rename sample names in a table}
\usage{
rename_ch3_samples(ch3_db, table, samples_map, strict = TRUE, preview = TRUE)
}
\arguments{
\item{ch3_db}{Path to a \code{.ch3.db} file or a \code{"ch3_db"} object.}

\item{table}{Character scalar: the table to modify (e.g. \code{"positions"},
\code{"windows"}, \code{"regions"}, or \code{"calls"}).}

\item{samples_map}{Either a named character vector (\code{names = old, values = new})
or a data.frame with columns \code{old} and \code{new}.}

\item{strict}{Logical; if \code{TRUE} (default) stop on issues (missing old
names, empty/NA new names, or duplicate mappings). If \code{FALSE}, tries
to proceed after dropping invalid rows with a warning.}

\item{preview}{Logical; if \code{TRUE}, prints a small before/after summary
of distinct sample names.}
}
\value{
(Invisibly) the updated \code{"ch3_db"} object (connection closed on return).
}
\description{
Update \code{sample_name} values in a specified DuckDB table using a mapping
from old names to new names. Accepts either a named character vector
(\code{c(old="new", ...)}), or a two-column data.frame with columns
\code{old} and \code{new}.
}
\examples{
\dontrun{
# Named character vector
rename_ch3_samples("my_db.ch3.db", table = "positions",
                   samples_map = c("Astrocytes" = "Astro",
                                   "Cortical_Neurons" = "Cortical"))

# data.frame mapping
m <- data.frame(old = c("Ctrl1","Ctrl2"), new = c("Control_1","Control_2"))
rename_ch3_samples("my_db.ch3.db", "windows", m)
}

}
